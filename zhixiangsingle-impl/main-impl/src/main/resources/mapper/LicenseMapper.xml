<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.zhixiangsingle.dao.license.LicenseMapper">
	<sql id="Base_Column_List">
		id, name, representative, validtime validTime, warningdate warningDate,
		serialnumber serialNumber,accountid accountId,licenceimg licenceImg,sdid sdId
	</sql>
	<sql id="selectPrintAllKey">
		<trim suffixOverrides=",">
			<if test="id != null" >
				l.id,
			</if>
			<if test="name != null and name != ''" >
				IFNULL(l.name,'-') name,
			</if>
			<if test="representative != null and representative != ''" >
				IFNULL(l.representative,'-') representative,
			</if>
			<if test="validTime != null and validTime !=''" >
				IFNULL(l.validtime,'-') validTime,
			</if>
			<if test="warningDate != null and warningDate != ''" >
				IFNULL(l.warningdate,'-') warningDate,
			</if>
			<if test="serialNumber != null and serialNumber != ''" >
				l.serialnumber serialNumber,
			</if>
			<if test="accountId != null and accountId != ''" >
				l.accountid accountId,
			</if>
			<if test="licenceImg != null and licenceImg != ''" >
				IFNULL(l.licenceimg,'-') licenceImg,
			</if>
			<if test="sdId != null" >
				l.sdid sdId,
			</if>
			<if test="siteName != null and siteName != ''" >
				#{siteName} siteName,
			</if>
			<if test="sitePhoto != null and sitePhoto != ''" >
				#{sitePhoto} sitePhoto,
			</if>
			<if test="picturePrefix != null and picturePrefix != ''" >
				#{picturePrefix} picturePrefix,
			</if>
		</trim>
	</sql>
	<sql id="selectAllKey">
		<trim suffixOverrides=",">
			<if test="id != null" >
				l.id,
			</if>
			<if test="name != null and name != ''" >
				IFNULL(l.name,null) name,
			</if>
			<if test="representative != null and representative != ''" >
				IFNULL(l.representative,null) representative,
			</if>
			<if test="validTime != null and validTime !=''" >
				IFNULL(l.validtime,null) validTime,
			</if>
			<if test="warningDate != null and warningDate != ''" >
				IFNULL(l.warningdate,null) warningDate,
			</if>
			<if test="serialNumber != null and serialNumber != ''" >
				l.serialnumber serialNumber,
			</if>
			<if test="accountId != null and accountId != ''" >
				l.accountid accountId,
			</if>
			<if test="licenceImg != null and licenceImg != ''" >
				IFNULL(l.licenceimg,null) licenceImg,
			</if>
			<if test="sdId != null" >
				l.sdid sdId,
			</if>
			<if test="siteName != null and siteName != ''" >
				#{siteName} siteName,
			</if>
			<if test="sitePhoto != null and sitePhoto != ''" >
				#{sitePhoto} sitePhoto,
			</if>
			<if test="picturePrefix != null and picturePrefix != ''" >
				#{picturePrefix} picturePrefix,
			</if>
		</trim>
	</sql>
	<sql id="insertAllKey">
		<trim suffixOverrides=",">
			<if test="name != null and name != ''" >
				name,
			</if>
			<if test="representative != null and representative != ''" >
				representative,
			</if>
			<if test="validTime != null and validTime !=''" >
				validtime,
			</if>
			<if test="warningDate != null and warningDate != ''" >
				warningdate,
			</if>
			<if test="serialNumber != null and serialNumber != ''" >
				serialnumber,
			</if>
			<if test="accountId != null and accountId != ''" >
				accountid,
			</if>
			<if test="licenceImg != null and licenceImg != ''" >
				licenceimg,
			</if>
			<if test="sdId != null" >
				sdid,
			</if>
		</trim>
	</sql>
	<sql id="insertAllValue">
		<trim suffixOverrides=",">
			<if test="name != null and name != ''" >
				#{name},
			</if>
			<if test="representative != null and representative != ''" >
				#{representative},
			</if>
			<if test="validTime != null and validTime !=''" >
				#{validTime},
			</if>
			<if test="warningDate != null and warningDate != ''" >
				#{warningDate},
			</if>
			<if test="serialNumber != null and serialNumber != ''" >
				#{serialNumber},
			</if>
			<if test="accountId != null" >
				#{accountId},
			</if>
			<if test="licenceImg != null and licenceImg != ''" >
				#{licenceImg},
			</if>
			<if test="sdId != null" >
				#{sdId},
			</if>
		</trim>
	</sql>
	<sql id="updateAllValue">
		<trim suffixOverrides=",">
			name = #{name,jdbcType=VARCHAR},
			representative = #{representative,jdbcType=VARCHAR},
			validtime = #{validTime,jdbcType=VARCHAR},
			warningdate = #{warningDate,jdbcType=VARCHAR},
			serialnumber = #{serialNumber,jdbcType=VARCHAR},
			licenceimg = #{licenceImg,jdbcType=VARCHAR},
			<if test="accountId != null" >
				accountid = #{accountId,jdbcType=INTEGER},
			</if>
		</trim>
	</sql>
	<sql id="whereAllValue">
		<where>
			<if test="accountId != null and accountId != -1" >
				AND l.accountid = #{accountId}
			</if>
			<if test="id != null and id != -1" >
				AND l.id = #{id}
			</if>
			<if test="sdId != null and sdId != -1" >
				AND l.sdid = #{sdId}
			</if>
			<if test='end != null and end != -1'>
				LIMIT #{start},#{end}
			</if>
		</where>
	</sql>
	<!-- 查找所有食材记录条数 start -->
	<select id="findIngredientBaseTotal" resultType="java.lang.Integer">
		SELECT
		COUNT(l.id)
		FROM
		license l
		<include refid="whereAllValue"/>
	</select>
	<!-- 查找所有食材记录条数 end -->
	<!-- 查找所有食材记录 start -->
	<select id="findIngredientBaseList" resultType="java.util.Map">
		SELECT
		<include refid="selectAllKey"/>
		FROM
		license l
		<include refid="whereAllValue"/>
	</select>
	<!-- 查找所有食材记录 end -->

	<!-- 查找所有记录(打印用) 返回值是实体类 -->
	<select id="findAllIngredientBase" resultType="cn.zhixiangsingle.entity.license.dto.LicenseDTO">
		SELECT
		<include refid="selectPrintAllKey"/>
		FROM
		license l
		<include refid="whereAllValue"/>
	</select>
	<!-- 查找所有记录(打印用) 返回值是实体类 end -->

	<!-- 查找单个 start -->
	<select id="findLicense" resultType="java.util.Map">
		SELECT
		<include refid="selectAllKey"/>
		FROM
		license l
		<include refid="whereAllValue"/>
	</select>
	<!-- 查找单个 end -->

	<!-- 查找所有食材记录条数 end -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		DELETE FROM license
        WHERE id = #{id,jdbcType=INTEGER} and sdid = #{sdId,jdbcType=INTEGER}
	</delete>
	<insert id="insertSelective" useGeneratedKeys="true" keyProperty="id">
		INSERT INTO license(<include refid="insertAllKey"/>) VALUES(<include refid="insertAllValue"/>);
	</insert>
	<update id="updateByPrimaryKey">
		UPDATE license
		<set>
			<include refid="updateAllValue"/>
		</set>
		WHERE id = #{id,jdbcType=INTEGER} and sdid = #{sdId,jdbcType=INTEGER}
	</update>
</mapper>